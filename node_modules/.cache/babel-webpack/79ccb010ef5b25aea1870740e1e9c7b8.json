{"ast":null,"code":"import { take } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/teachers.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(router, teacherService, _snackBar) {\n      this.router = router;\n      this.teacherService = teacherService;\n      this._snackBar = _snackBar;\n      this.wrongDetails = true;\n      this.isVisible = false;\n      this.validMessage = \"\";\n    }\n\n    openSnackBar() {\n      this._snackBar.open(this.validMessage, \"\", {\n        horizontalPosition: \"center\",\n        verticalPosition: \"bottom\",\n        duration: 5000\n      });\n    }\n\n    signIn() {\n      this.teacherService.getAllTch().pipe(take(1)).subscribe(data => {\n        this.findUser = data.find(item => item.email === this.email);\n\n        if (this.findUser) {\n          if (this.findUser.password === this.password) {\n            localStorage.setItem(\"currentUser\", JSON.stringify(this.findUser.name));\n            localStorage.setItem(\"id\", JSON.stringify(this.findUser.id));\n            this.router.navigate([\"profesori\"]);\n            this.clearInput();\n          } else {\n            localStorage.removeItem(\"currentUser\");\n            this.validMessage = \"Wrong details! Check it again!\";\n            this.openSnackBar();\n          }\n        } else {\n          localStorage.removeItem(\"currentUser\");\n          this.validMessage = \"Wrong details! Check it again!\";\n          this.openSnackBar();\n          this.clearInput();\n        }\n      });\n    }\n\n    clearInput() {\n      this.email = \"\";\n      this.password = \"\";\n      this.id = null;\n    }\n\n    get isLoggedIn() {\n      const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n      return user !== null ? true : false;\n    } // Sign out\n\n\n    SignOut() {\n      localStorage.removeItem(\"currentUser\");\n      localStorage.removeItem(\"id\");\n      this.router.navigate([\"home\"]);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.TeachersService), i0.ɵɵinject(i3.MatSnackBar));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: \"root\"\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}