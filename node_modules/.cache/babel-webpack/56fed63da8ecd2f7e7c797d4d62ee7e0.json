{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/snack-bar\";\nexport let StudentDetailsService = /*#__PURE__*/(() => {\n  class StudentDetailsService {\n    constructor(http, _snackBar) {\n      this.http = http;\n      this._snackBar = _snackBar;\n      this.validMessage = \"\";\n      this.apiURL = \"http://sdaproject.tk/\";\n      this.httpHeaders = {\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/JSON\"\n        })\n      };\n    }\n\n    addStudentGrades(details) {\n      return this.http.post(this.apiURL + \"note\", details, this.httpHeaders).pipe(catchError(this.handleError.bind(this)));\n    }\n\n    getStudentGrades(id) {\n      return this.http.get(this.apiURL + \"detaliinote/\" + id, this.httpHeaders);\n    }\n\n    getAllStudentsGrades() {\n      return this.http.get(this.apiURL + \"detaliinote\", this.httpHeaders);\n    } // Error handling\n\n\n    handleError(error) {\n      let errorMessage = \"\";\n\n      if (error.error instanceof ErrorEvent) {\n        // Get client-side error\n        errorMessage = error.error.message;\n      } else {\n        // Get server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      this.validMessage = errorMessage;\n      this.openSnackBar();\n      return throwError(errorMessage);\n    }\n\n    openSnackBar() {\n      this._snackBar.open(this.validMessage, \"\", {\n        horizontalPosition: \"center\",\n        verticalPosition: \"bottom\",\n        duration: 5000\n      });\n    }\n\n  }\n\n  StudentDetailsService.ɵfac = function StudentDetailsService_Factory(t) {\n    return new (t || StudentDetailsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MatSnackBar));\n  };\n\n  StudentDetailsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentDetailsService,\n    factory: StudentDetailsService.ɵfac,\n    providedIn: \"root\"\n  });\n  return StudentDetailsService;\n})();","map":null,"metadata":{},"sourceType":"module"}